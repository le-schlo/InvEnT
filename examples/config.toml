#
run_type = "staged_learning"
device = "cuda:0"  # set torch device e.g. "cpu"
tb_logdir = "/tmp/tb_reinvent"  # name of the TensorBoard logging directory
json_out_config = "_staged_learning.json"  # write this TOML to JSON

[parameters]

summary_csv_prefix = "/tmp/staged_learning_reinvent"  # prefix for the CSV file
use_checkpoint = false  # if true read diversity filter from agent_file
purge_memories = false  # if true purge all diversity filter memories after each stage

## Path to prior
prior_file = "/tmp/InvEnT_dev/REINVENT4/priors/reinvent.prior"
agent_file = "/tmp/InvEnT_dev/REINVENT4/priors/reinvent.prior"

batch_size = 64          # network
unique_sequences = true  # if true remove all duplicates raw sequences in each step
                         # only here for backward compatibility
randomize_smiles = true  # if true shuffle atoms in SMILES randomly


[learning_strategy]

type = "dap"      # dap: only one supported
sigma = 128       # sigma of the RL reward function
rate = 0.0001     # for torch.optim


 [diversity_filter]  # optional, comment section out or remove if unneeded
                    # NOTE: also memorizes all seen SMILES

 type = "ScaffoldSimilarity" # IdenticalTopologicalScaffold,
                                 # ScaffoldSimilarity, PenalizeSameSmiles
 bucket_size = 100                 # memory size in number of compounds
 minscore = 0.4                   # only memorize if this threshold is exceeded
 minsimilarity = 0.4              # minimum similarity for ScaffoldSimilarity
 penalty_multiplier = 0.5         # penalty factor for PenalizeSameSmiles


[[stage]]

chkpt_file = 'agent_run.chkpt'  # name of the checkpoint file, can be reused as agent

termination = "simple"  # termination criterion fot this stage
max_score = 1  # terminate if this total score is exceeded
min_steps = 25  # run for at least this number of steps
max_steps = 200  # terminate entire run when exceeded

[stage.scoring]
type = "custom_product"  # aggregation function

[[stage.scoring.component]]
[stage.scoring.component.custom_alerts]
[[stage.scoring.component.custom_alerts.endpoint]]
name = "Unwanted SMARTS"  # user chosen name for output
weight = 1  # weight to fine-tune the relevance of this component

params.smarts = [
   "[*;r3]",
   "[*;r4]",
   "[*;r8]",
   "[*;r9]",
   "[*;r10]",
   "[*;r11]",
   "[*;r12]",
   "[*;r13]",
   "[*;r14]",
   "[*;r15]",
   "[*;r16]",
   "[*;r17]",
   "[#7!nN!H0]",
   "[N;X3]",
   "[CH2]",
   "[#6]=O",
   "C=C",
   "[OH]",
   "[!#6][!#6]"
]

[[stage.scoring.component]]
[stage.scoring.component.ChemProp]
[[stage.scoring.component.ChemProp.endpoint]]
name = "EnTdecker"
weight = 1

params.checkpoint_dir = "/tmp/InvEnT_dev/Models/triplet_energy"
params.rdkit_2d_normalized = true
params.target_column = "e_t"
transform.type = "double_sigmoid"
transform.high = 75
transform.low = 55
transform.coef_div = 1
transform.coef_si = 0.5
transform.coef_se = 5

[[stage.scoring.component]]
[stage.scoring.component.ChemProp_uvvis]
[[stage.scoring.component.ChemProp_uvvis.endpoint]]
name = "ChemProp_uvvis"
weight = 1

params.checkpoint4featuregen = "/tmp/InvEnT_dev/Models/uvvis/lambda_max_abs_wb97xd3/chemprop/all_wb97xd3/production/fold_0"
params.checkpoint_dir = "/tmp/InvEnT_dev/Models/uvvis/lambda_max_abs/chemprop_tddft/combined/production/fold_0"
params.tmp_dir = "/tmp/InvEnT_dev/tmp/uvvis_tmp"
params.target_column = "peakwavs_max"
params.rdkit_2d_normalized = false
transform.type = "double_sigmoid"
transform.high = 430
transform.low = 330
transform.coef_div = 10
transform.coef_si = 0.5
transform.coef_se = 5

 [[stage.scoring.component]]
 [stage.scoring.component.excitedstate]
 [[stage.scoring.component.excitedstate.endpoint]]
 name = "Excited State lambda_max"
 weight = 1
 params.tmp_dir = '/tmp/mwfn_calcdir'
 params.path_to_xtb = '/opt/miniconda/envs/InvEnT_dev/bin/xtb'
 params.path_to_stda = '/home/employee/l_schl60/software/xtb4stda'
 params.maximum_waiting_time = 180
 params.use_stddft = false
 params.use_gfnff = true  # Default is gnf2
 params.target_property = 'lambda_max'
 transform.type = "sigmoid"
 transform.high = 400
 transform.low = 300
 transform.k = 1

 [[stage.scoring.component]]
 [stage.scoring.component.es_character]
 [[stage.scoring.component.es_character.endpoint]]
 name = "Overlap_quick"
 weight = 1
 params.path_to_xtb = '/opt/miniconda/envs/InvEnT_dev/bin/xtb'
 params.path_to_multiwfn = '/home/employee/l_schl60/software/Multiwfn_3.7_bin_Linux_noGUI/Multiwfn'
 params.calculation_mode = 'multiwfn_quick'
 params.aggregation_mode = 'formula'
 params.dir4tempfiles = '/tmp/mwfn_calcdir'
 params.use_gfn2 = false
 params.Singlet_param = 1.0
 params.S_overlap = 1.0
 params.S_distance = 0.0
 params.Triplet_param = 0.0
 params.T_overlap = 0.0
 params.T_distance = 0.0
 transform.type = "left_step"
 transform.low = 0.5

[[stage.scoring.component]]
[stage.scoring.component.conjugationdegree]
[[stage.scoring.component.conjugationdegree.endpoint]]
name = "Conjugation"
weight = 1
params.mode = "fraction"
params.exclude_split_system = true
transform.type = "sigmoid"
transform.high = 0.85
transform.low = 0.25
transform.k = 1
